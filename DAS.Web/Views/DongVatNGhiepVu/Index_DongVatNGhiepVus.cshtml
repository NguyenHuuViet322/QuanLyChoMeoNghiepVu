@using ESD.Application.Enums.DasKTNN;
@using ESD.Application.Models.ViewModels.ESDNghiepVu;
@using ESD.Utility;
@using System.IO;
@using QRCoder;
@using System.Drawing;
@model VMIndexDongVatNghiepVu
@{
    int stt = Model.DongVatNghiepVus.PageSize * (Model.DongVatNghiepVus.PageIndex - 1);
    var pageSizes = new[] { 10, 20, 30, 50, 100 };
    var gioitinhs = Utils.EnumToDic<GioiTinhDongVat>();
    var searchParam = Model.SearchParam;
    QRCodeGenerator qrGenerator = new QRCodeGenerator();
}
<div class="table-responsive">
    <table class="table table-borderless table-space table-hover dataTable dtr-inline useTreegrid table-bid-custom" role="grid" data-tree="3">
        <thead class="thead-light">
            <tr class="elevation-1">
                <th class="pb-2 col-min">STT</th>

                <th class="text-center col-min">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="group-checkable custom-control-input" id="checkall" value="">
                        <label class="custom-control-label" for="checkall"></label>
                    </div>
                </th>
                <th class="pb-2">Mã định danh</th>
                <th class="pb-2">Số hiệu DVNV</th>
                <th class="pb-2 m-w-200-px">Tên gọi</th>
                <th class="pb-2">Giống động vật</th>
                <th class="pb-2">Giới tính</th>
                <th class="pb-2 m-w-150-px">Đơn vị quản lý</th>
                <th class="pb-2 m-w-150-px">Cán bộ huấn luyện</th>
                <th class="pb-2 m-w-50-px">QR Code</th>
                <th class="pb-2 col-min text-center">Thao tác</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.DongVatNghiepVus)
            {
                stt++;
                var giong = Model.LoaiChoNghiepVus.FirstOrNewObj(n => n.ID == item.IDLoaiChoNghiepVu);
                var donviql = Model.DonViNghiepVus.FirstOrNewObj(n => n.ID == item.IDDonViQuanLy);
                var canBo = Model.ThongTinCanBos.FirstOrNewObj(n => n.ID == item.IDThongTinCanBo);

                var editLink = $"/DongVatNghiepVu/Edit?id={item.ID}";
                var deleteLink = $"/DongVatNghiepVu/Delete?id={item.ID}";
                var detailLink = Url.Action(action: "Details", controller: "DongVatNGhiepVu", new { id = item.ID }, protocol: "https");
                var phanLoai = Utils.GetDescriptionEnumByKey<PhanLoaiDongVat>((int)item.PhanLoai);
                var detailLinkPopup = $"/DongVatNghiepVu/Details_Popup?id={item.ID}";

                <tr>
                    <td class="text-center">@stt</td>
                    <td class="text-center">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="checkboxes custom-control-input" id="role-@item.ID" data-id="@item.ID" value="@item.ID">
                            <label class="custom-control-label" for="role-@item.ID"></label>
                        </div>
                    </td>
                    <td>@item.Code</td>
                    <td>@item.SoHieu</td>
                    <td>@item.Ten</td>
                    <td>@giong.Ten</td>
                    <td>@gioitinhs.GetValueOrDefault(item.GioiTinh??0)</td>
                    <td>@donviql.Ten</td>
                    <td>@canBo.TenCanBo</td>
                    @{
                        QRCodeData editLinkData = qrGenerator.CreateQrCode(detailLink, QRCodeGenerator.ECCLevel.Q);
                        QRCode qrCode = new QRCode(editLinkData);
                        Bitmap qrCodeImage = qrCode.GetGraphic(45);
                        byte[] qrCodeByte = (byte[])new ImageConverter().ConvertTo(qrCodeImage, typeof(byte[]));
                        <td><img style="height: 45px;width:auto" src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(qrCodeByte))" /></td>
                    }
                    <td class="text-center">
                        <div class="d-flex is-btn-action">
                            <a title="Xem chi tiết" class="quickUpdate" href="@detailLinkPopup"
                           data-type="@searchParam.Type"
                           data-target="#mdIUDongVatNghiepVu" data-toggle="tooltip" data-original-title="Xem chi tiết">
                                <i class="fas fa-fw fa-eye"></i>
                            </a>
                            <a title="Sửa" class="quickUpdate" href="@editLink"
                           data-type="@searchParam.Type"
                           data-target="#mdIUDongVatNghiepVu" data-toggle="tooltip" data-original-title="Sửa">
                                <i class="fas fa-fw fa-edit"></i>
                            </a>
                            @if(Model.IsKhaiBaoMat==false)
                            {
                                var moveLink = $"/DongVatNghiepVu/DieuChuyen?id={item.ID}";
                                
                                <a title="Điều chuyển" class=" quickUpdate" href="@moveLink" data-type="@searchParam.Type" data-target="#mdIUDongVatNghiepVu" data-toggle="tooltip"  data-original-title="Điều chuyển">
                                     <i class="fas fa-fw fa-share"></i>
                              </a>
                            }
                            <a title="Xoá" data-comfirm-message="Xoá động vật nghiệp vụ: Bạn có chắc chắn muốn xoá động vật nghiệp vụ này?" class="quickDelete"
                           href="@deleteLink" data-id="@item.ID"
                           data-type="@searchParam.Type"
                           data-toggle="tooltip" data-original-title="Xóa">
                                <i class="fas fa-fw fa-trash-alt"></i>
                            </a>
                        </div>
                </tr>
            }

        </tbody>
    </table>
</div>

@await Html.PartialAsync("_PagingFooter", Model.DongVatNghiepVus, new ViewDataDictionary(this.ViewData) { { "TargetForm", "frmDongVatNghiepVu" } })